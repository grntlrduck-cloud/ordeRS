/*
 * OrdeRS BookStore Sample Service API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NewOrder {
    #[serde(rename = "bookId")]
    pub book_id: String,
    #[serde(rename = "customerId")]
    pub customer_id: String,
    #[serde(rename = "quantity")]
    pub quantity: i32,
    #[serde(rename = "shipping_date")]
    pub shipping_date: String,
    #[serde(rename = "shipping_address_override", skip_serializing_if = "Option::is_none")]
    pub shipping_address_override: Option<Box<models::Address>>,
    /// Order Status
    #[serde(rename = "status")]
    pub status: Status,
    #[serde(rename = "complete", skip_serializing_if = "Option::is_none")]
    pub complete: Option<bool>,
}

impl NewOrder {
    pub fn new(book_id: String, customer_id: String, quantity: i32, shipping_date: String, status: Status) -> NewOrder {
        NewOrder {
            book_id,
            customer_id,
            quantity,
            shipping_date,
            shipping_address_override: None,
            status,
            complete: None,
        }
    }
}
/// Order Status
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "placed")]
    Placed,
    #[serde(rename = "shipped")]
    Shipped,
    #[serde(rename = "delivered")]
    Delivered,
    #[serde(rename = "canceled")]
    Canceled,
}

impl Default for Status {
    fn default() -> Status {
        Self::Placed
    }
}

