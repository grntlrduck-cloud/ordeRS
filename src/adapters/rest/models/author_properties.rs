/*
 * OrdeRS BookStore Sample Service API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuthorProperties {
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "first_name", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    #[serde(rename = "second_names", skip_serializing_if = "Option::is_none")]
    pub second_names: Option<Vec<String>>,
    #[serde(rename = "last_name", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    #[serde(rename = "date_of_death", skip_serializing_if = "Option::is_none")]
    pub date_of_death: Option<String>,
}

impl AuthorProperties {
    pub fn new() -> AuthorProperties {
        AuthorProperties {
            title: None,
            first_name: None,
            second_names: None,
            last_name: None,
            date_of_death: None,
        }
    }
}

